{"version":3,"sources":["components/Search/Searchbar.js","components/Search/Search.js","components/Main/Table/Table.js","components/Main/Headings/Headings.js","utils/API.js","components/Main/Results.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Searchbar","handleInputChange","className","type","placeholder","aria-label","onChange","onClick","Search","Table","users","undefined","name","map","login","picture","phone","email","dob","key","uuid","src","medium","alt","first","last","href","target","date","newDate","slice","YYYY","formatDate","Headings","props","headings","hname","width","style","data-key","cursor","handleSort","query","axios","get","BASEURL","Results","state","search","filteredUsers","sort","event","newSearch","value","toLowerCase","setState","console","log","filtered","filter","item","includes","sortedUsers","attributes","getNamedItem","a","b","reverse","reverseSort","API","then","res","data","results","this","Component","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b74adb04.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Searchbar({ handleInputChange }) {\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row col-12 justify-content-center\">\r\n                <form className=\"form-inline input-group p-2 searchbar\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        aria-label=\"Search\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <button\r\n                        className=\"btn btn-outline-success ml-2\"\r\n                        type=\"submit\"\r\n                        onClick={handleInputChange}>\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbar;","import React from \"react\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nfunction Search({ handleInputChange }) {\r\n    return <Searchbar handleInputChange={handleInputChange} />;\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\n\r\nfunction Table({ users }) {\r\n    function formatDate(date) {\r\n        const newDate = date.slice(0, 10);\r\n        const YYYY = newDate.slice(0, 4);\r\n        const MM = newDate.slice(5, 7);\r\n        const DD = newDate.slice(8, 10);\r\n        const formattedDate = MM + \"/\" + DD + \"/\" + YYYY;\r\n        return formattedDate;\r\n    }\r\n    return (\r\n        <tbody>\r\n            {users[0] !== undefined && users[0].name !== undefined ? (\r\n                users.map(({ name, login, picture, phone, email, dob }) => {\r\n                    return (\r\n                        <tr key={login.uuid}>\r\n                            <td className=\"align-middle\">\r\n                                <img\r\n                                    src={picture.medium}\r\n                                    alt=\"profile\"\r\n                                    className=\"img img-responsive\"\r\n                                />\r\n                            </td>\r\n                            <td className=\"name-cell align-middle\">\r\n                                {name.first} {name.last}\r\n                            </td>\r\n                            <td className=\"align-middle\">{phone}</td>\r\n                            <td className=\"align-middle\">\r\n                                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                    {email}\r\n                                </a>\r\n                            </td>\r\n                            <td className=\"align-middle\">{formatDate(dob.date)}</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            ) : (\r\n                    <></>\r\n                )}\r\n        </tbody>\r\n    );\r\n}\r\nexport default Table;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nfunction Headings(props) {\r\n    return (\r\n        <thead className=\"thead-dark\">\r\n            <tr>\r\n                {props.headings.map(({ hname, width }) => {\r\n                    return (\r\n                        <th className=\"col\" key={hname} style={{ width }}>\r\n                            {hname}{\" \"}\r\n                            {hname ? (\r\n                                <i\r\n                                    className=\"fas fa-sort\"\r\n                                    data-key={hname}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={props.handleSort}></i>\r\n                            ) : (\r\n                                    \"\"\r\n                                )}\r\n                        </th>\r\n                    );\r\n                })}\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default Headings;","import axios from \"axios\"\r\nconst BASEURL = \"https://randomuser.me/api/\";\r\nconst APIKEY = \"?key=DUM1-N5W4-JCP4-QGP9\";\r\nconst result = \"&results=50\";\r\n\r\n\r\n\r\nexport default {\r\n    getUsers: function (query) {\r\n        return axios.get(BASEURL + APIKEY + result);\r\n    }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport Search from \"../Search/Search\"\r\nimport Table from \"./Table/Table\";\r\nimport Headings from \"./Headings/Headings\"\r\nimport API from \"../../utils/API\"\r\n\r\n\r\nclass Results extends Component {\r\n    state = {\r\n        users: [{}],\r\n        search: \"\",\r\n        filteredUsers: [{}],\r\n        sort: \"descend\",\r\n    };\r\n\r\n    headings = [\r\n        { hname: \"\", width: \"10%\", sort: \"descend\" },\r\n        { hname: \"Name\", width: \"25%\", sort: \"descend\" },\r\n        { hname: \"Phone\", width: \"20%\", sort: \"descend\" },\r\n        { hname: \"Email\", width: \"20%\", sort: \"descend\" },\r\n        { hname: \"DOB\", width: \"20%\", sort: \"descend\" },\r\n    ];\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        API.getUsers().then((res) => {\r\n            this.setState({\r\n                users: res.data.results,\r\n                filteredUsers: res.data.results,\r\n            });\r\n        });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const newSearch = event.target.value.toLowerCase();\r\n        this.setState({ search: newSearch })\r\n        const users = this.state.users;\r\n        console.log(users);\r\n        const filtered = users.filter((item) =>\r\n            item.name.first.toLowerCase().includes(newSearch) ||\r\n            item.name.last.toLowerCase().includes(newSearch) ||\r\n            item.phone.includes(newSearch) ||\r\n            item.dob.date.slice(0, 10).includes(newSearch)\r\n        );\r\n        this.setState({ filteredUsers: filtered });\r\n    }\r\n    handleSort = (event) => {\r\n        const users = this.state.users;\r\n        console.log(users);\r\n        let hname = event.target.attributes\r\n            .getNamedItem(\"data-key\")\r\n            .value.toLowerCase();\r\n        console.log(hname);\r\n\r\n        if (this.state.sort === \"descend\") {\r\n            this.setState({\r\n                sort: \"ascend\",\r\n            });\r\n        } else {\r\n            this.setState({\r\n                sort: \"descend\",\r\n            });\r\n        }\r\n\r\n        let sortedUsers;\r\n\r\n        if (hname === \"name\") {\r\n            sortedUsers = users.sort((a, b) => {\r\n                if (a.name.first < b.name.first) {\r\n                    return -1;\r\n                }\r\n                if (a.name.first > b.name.first) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n        } else if (hname === \"dob\") {\r\n            sortedUsers = users.sort((a, b) => {\r\n                if (a.dob.date < b.dob.date) {\r\n                    return -1;\r\n                }\r\n                if (a.dob.date > b.dob.date) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        } else {\r\n            sortedUsers = users.sort((a, b) => {\r\n                if (a[hname] < b[hname]) {\r\n                    return -1;\r\n                }\r\n                if (a[hname] > b[hname]) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        }\r\n        if (this.state.sort === \"descend\") {\r\n            reverseSort(sortedUsers);\r\n        }\r\n\r\n        this.setState({ filteredUsers: sortedUsers });\r\n\r\n        function reverseSort(sortedUsers) {\r\n            return sortedUsers.reverse();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Search handleInputChange={this.handleInputChange} />\r\n                <table className=\" table table-striped table-hover mt-5\">\r\n                    <Headings headings={this.headings} handleSort={this.handleSort} />\r\n                    <Table users={this.state.filteredUsers} />\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"App\">\r\n            Employee Directory\r\n            <header className=\"App-header\">\r\n\r\n\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Results from \"./components/Main/Results\";\nimport Header from \"./components/Header\";\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Results />\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}